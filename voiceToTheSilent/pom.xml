<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.academiadecodigo.bitjs.voiceToTheSilent</groupId>
  <artifactId>voiceToTheSilent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>voiceToTheSilent Webapp</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--<maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>-->
  </properties>

    <dependencies>

      <!--Spring MVC Dependency-->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>4.3.11.RELEASE</version>
      </dependency>

      <!--Spring ORM Dependency-->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>4.3.11.RELEASE</version>
      </dependency>

      <!--Transaction Manager Dependency-->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>4.3.11.RELEASE</version>
      </dependency>

      <!--Thymeleaf Dependency-->
      <dependency>
        <groupId>org.thymeleaf</groupId>
        <artifactId>thymeleaf-spring4</artifactId>
        <version>3.0.8.RELEASE</version>
      </dependency>

      <!--Hibernate Dependencies (Simplifies persistence process)-->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>5.3.6.Final</version>
      </dependency>

      <!-- Hibernate uses JDBC connections in order to interact with a database. Creating these connections is
      expensive, probably the most expensive, single operation Hibernate will execute in a typical usecase.
      For this reason, we are advised to use a connection pool, which can store open connections ahead of time and
      close them only when they are not needed. C3P0 is an example of an external connection pool. -->
      <!--<dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-c3p0</artifactId>
        <version>5.3.6.Final</version>
      </dependency>

      &lt;!&ndash;Hibernate Dependency that allows us to do validations (@NotNull, @Email, etc) &ndash;&gt;
      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version> 6.0.2.Final</version>
      </dependency>

      &lt;!&ndash;Hibernate Dependency (Allows hibernate to implement jpa API)&ndash;&gt;
      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.1-api</artifactId>
        <version>1.0.0.Final</version>
      </dependency>-->

      <!--MySQL Dependency-->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>8.0.12</version>
      </dependency>

      <!--Servlet dependency that deals with http requests -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version> 3.1.0</version>
        <scope>provided</scope>
      </dependency>

      <!--Allows conversion of beans on .xml files in classes and the inverse process-->
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.3.0</version>
      </dependency>

      <!--Jackson Dependency (convert jsons) -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.8.0</version>
      </dependency>

      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>2.2.0</version>
        <scope>test</scope>
      </dependency>

    </dependencies>

    <build>
      <finalName>voiceToTheSilent</finalName>

      <plugins>
        <!--<plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        &lt;!&ndash; see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging &ndash;&gt;
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>-->
        <!--Plugin Maven-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>1.8</source>
            <target>10</target>
          </configuration>
        </plugin>

        <!--Plugin Tomcat-->
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <url>http://localhost:8080/manager/text</url>
            <server>tomcat</server>
            <path>/voicets</path>  <!--before: javabank4-->
          </configuration>
        </plugin>

      </plugins>
    </build>
  </project>



